// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: system.proto

#ifndef PROTOBUF_system_2eproto__INCLUDED
#define PROTOBUF_system_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class ForwardData;
class ForwardDataDefaultTypeInternal;
extern ForwardDataDefaultTypeInternal _ForwardData_default_instance_;
class RegisterRequest;
class RegisterRequestDefaultTypeInternal;
extern RegisterRequestDefaultTypeInternal _RegisterRequest_default_instance_;
class RegisterResponse;
class RegisterResponseDefaultTypeInternal;
extern RegisterResponseDefaultTypeInternal _RegisterResponse_default_instance_;
class StatusRequest;
class StatusRequestDefaultTypeInternal;
extern StatusRequestDefaultTypeInternal _StatusRequest_default_instance_;
class StatusResponse;
class StatusResponseDefaultTypeInternal;
extern StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
class SyncQueueData;
class SyncQueueDataDefaultTypeInternal;
extern SyncQueueDataDefaultTypeInternal _SyncQueueData_default_instance_;
class SyncQueueRequest;
class SyncQueueRequestDefaultTypeInternal;
extern SyncQueueRequestDefaultTypeInternal _SyncQueueRequest_default_instance_;
class VoteData;
class VoteDataDefaultTypeInternal;
extern VoteDataDefaultTypeInternal _VoteData_default_instance_;
class VoteResponse;
class VoteResponseDefaultTypeInternal;
extern VoteResponseDefaultTypeInternal _VoteResponse_default_instance_;

namespace protobuf_system_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_system_2eproto

enum SystemMessageType {
  SYSTEM_BASE = 256,
  REGISTER_REQUEST = 257,
  REGISTER_RESPONSE = 258,
  STATUS_REQUEST = 259,
  STATUS_RESPONSE = 260,
  CONFIG_DATA_REQUEST = 261,
  CONFIG_DATA_RESPONSE = 262,
  HTTP_REQUEST = 263,
  VOTE_REQUEST = 265,
  VOTE_RESPONSE = 266,
  VOTE_NOTIFY = 267,
  PUSH_QUEUE_REQUEST = 269,
  PUSH_QUEUE_RESPONSE = 270,
  POP_QUEUE_REQUEST = 271,
  POP_QUEUE_RESPONSE = 272,
  SYNC_QUEUE_REQUEST = 273,
  SYNC_QUEUE_RESPONSE = 274,
  FORWARD_REQUEST = 277,
  FORWARD_RESPONSE = 278,
  BROADCAST_NOTIFY = 500
};
bool SystemMessageType_IsValid(int value);
const SystemMessageType SystemMessageType_MIN = SYSTEM_BASE;
const SystemMessageType SystemMessageType_MAX = BROADCAST_NOTIFY;
const int SystemMessageType_ARRAYSIZE = SystemMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SystemMessageType_descriptor();
inline const ::std::string& SystemMessageType_Name(SystemMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SystemMessageType_descriptor(), value);
}
inline bool SystemMessageType_Parse(
    const ::std::string& name, SystemMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SystemMessageType>(
    SystemMessageType_descriptor(), name, value);
}
enum SystemErrorType {
  EC_SUCCESS = 0,
  EC_VOTE_FAILED = 257,
  EC_VOTE_LEADER_EXIST = 258
};
bool SystemErrorType_IsValid(int value);
const SystemErrorType SystemErrorType_MIN = EC_SUCCESS;
const SystemErrorType SystemErrorType_MAX = EC_VOTE_LEADER_EXIST;
const int SystemErrorType_ARRAYSIZE = SystemErrorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SystemErrorType_descriptor();
inline const ::std::string& SystemErrorType_Name(SystemErrorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SystemErrorType_descriptor(), value);
}
inline bool SystemErrorType_Parse(
    const ::std::string& name, SystemErrorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SystemErrorType>(
    SystemErrorType_descriptor(), name, value);
}
// ===================================================================

class RegisterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RegisterRequest) */ {
 public:
  RegisterRequest();
  virtual ~RegisterRequest();

  RegisterRequest(const RegisterRequest& from);

  inline RegisterRequest& operator=(const RegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterRequest(RegisterRequest&& from) noexcept
    : RegisterRequest() {
    *this = ::std::move(from);
  }

  inline RegisterRequest& operator=(RegisterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterRequest& default_instance();

  static inline const RegisterRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterRequest*>(
               &_RegisterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RegisterRequest* other);
  friend void swap(RegisterRequest& a, RegisterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterRequest& from);
  void MergeFrom(const RegisterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 node_type = 1 [default = 0];
  bool has_node_type() const;
  void clear_node_type();
  static const int kNodeTypeFieldNumber = 1;
  ::google::protobuf::int32 node_type() const;
  void set_node_type(::google::protobuf::int32 value);

  // required int32 node_id = 2 [default = 0];
  bool has_node_id() const;
  void clear_node_id();
  static const int kNodeIdFieldNumber = 2;
  ::google::protobuf::int32 node_id() const;
  void set_node_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RegisterRequest)
 private:
  void set_has_node_type();
  void clear_has_node_type();
  void set_has_node_id();
  void clear_has_node_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 node_type_;
  ::google::protobuf::int32 node_id_;
  friend struct protobuf_system_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RegisterResponse) */ {
 public:
  RegisterResponse();
  virtual ~RegisterResponse();

  RegisterResponse(const RegisterResponse& from);

  inline RegisterResponse& operator=(const RegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterResponse(RegisterResponse&& from) noexcept
    : RegisterResponse() {
    *this = ::std::move(from);
  }

  inline RegisterResponse& operator=(RegisterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterResponse& default_instance();

  static inline const RegisterResponse* internal_default_instance() {
    return reinterpret_cast<const RegisterResponse*>(
               &_RegisterResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RegisterResponse* other);
  friend void swap(RegisterResponse& a, RegisterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterResponse& from);
  void MergeFrom(const RegisterResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error_code = 1 [default = 0];
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RegisterResponse)
 private:
  void set_has_error_code();
  void clear_has_error_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 error_code_;
  friend struct protobuf_system_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatusRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StatusRequest) */ {
 public:
  StatusRequest();
  virtual ~StatusRequest();

  StatusRequest(const StatusRequest& from);

  inline StatusRequest& operator=(const StatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatusRequest(StatusRequest&& from) noexcept
    : StatusRequest() {
    *this = ::std::move(from);
  }

  inline StatusRequest& operator=(StatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusRequest& default_instance();

  static inline const StatusRequest* internal_default_instance() {
    return reinterpret_cast<const StatusRequest*>(
               &_StatusRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(StatusRequest* other);
  friend void swap(StatusRequest& a, StatusRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatusRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  StatusRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StatusRequest& from);
  void MergeFrom(const StatusRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:StatusRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_system_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatusResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StatusResponse) */ {
 public:
  StatusResponse();
  virtual ~StatusResponse();

  StatusResponse(const StatusResponse& from);

  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatusResponse(StatusResponse&& from) noexcept
    : StatusResponse() {
    *this = ::std::move(from);
  }

  inline StatusResponse& operator=(StatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusResponse& default_instance();

  static inline const StatusResponse* internal_default_instance() {
    return reinterpret_cast<const StatusResponse*>(
               &_StatusResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(StatusResponse* other);
  friend void swap(StatusResponse& a, StatusResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatusResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  StatusResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StatusResponse& from);
  void MergeFrom(const StatusResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:StatusResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_system_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VoteData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VoteData) */ {
 public:
  VoteData();
  virtual ~VoteData();

  VoteData(const VoteData& from);

  inline VoteData& operator=(const VoteData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoteData(VoteData&& from) noexcept
    : VoteData() {
    *this = ::std::move(from);
  }

  inline VoteData& operator=(VoteData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoteData& default_instance();

  static inline const VoteData* internal_default_instance() {
    return reinterpret_cast<const VoteData*>(
               &_VoteData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(VoteData* other);
  friend void swap(VoteData& a, VoteData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoteData* New() const PROTOBUF_FINAL { return New(NULL); }

  VoteData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VoteData& from);
  void MergeFrom(const VoteData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VoteData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string host = 5 [default = ""];
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 5;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional int32 vote_id = 1 [default = 0];
  bool has_vote_id() const;
  void clear_vote_id();
  static const int kVoteIdFieldNumber = 1;
  ::google::protobuf::int32 vote_id() const;
  void set_vote_id(::google::protobuf::int32 value);

  // optional int32 node_id = 2 [default = 0];
  bool has_node_id() const;
  void clear_node_id();
  static const int kNodeIdFieldNumber = 2;
  ::google::protobuf::int32 node_id() const;
  void set_node_id(::google::protobuf::int32 value);

  // optional int64 trans_id = 3 [default = 0];
  bool has_trans_id() const;
  void clear_trans_id();
  static const int kTransIdFieldNumber = 3;
  ::google::protobuf::int64 trans_id() const;
  void set_trans_id(::google::protobuf::int64 value);

  // optional int32 port = 4 [default = 0];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:VoteData)
 private:
  void set_has_vote_id();
  void clear_has_vote_id();
  void set_has_node_id();
  void clear_has_node_id();
  void set_has_trans_id();
  void clear_has_trans_id();
  void set_has_port();
  void clear_has_port();
  void set_has_host();
  void clear_has_host();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int32 vote_id_;
  ::google::protobuf::int32 node_id_;
  ::google::protobuf::int64 trans_id_;
  ::google::protobuf::int32 port_;
  friend struct protobuf_system_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VoteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VoteResponse) */ {
 public:
  VoteResponse();
  virtual ~VoteResponse();

  VoteResponse(const VoteResponse& from);

  inline VoteResponse& operator=(const VoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoteResponse(VoteResponse&& from) noexcept
    : VoteResponse() {
    *this = ::std::move(from);
  }

  inline VoteResponse& operator=(VoteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoteResponse& default_instance();

  static inline const VoteResponse* internal_default_instance() {
    return reinterpret_cast<const VoteResponse*>(
               &_VoteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(VoteResponse* other);
  friend void swap(VoteResponse& a, VoteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoteResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  VoteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VoteResponse& from);
  void MergeFrom(const VoteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VoteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .VoteData data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::VoteData& data() const;
  ::VoteData* mutable_data();
  ::VoteData* release_data();
  void set_allocated_data(::VoteData* data);

  // required int32 error_code = 1 [default = 0];
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:VoteResponse)
 private:
  void set_has_error_code();
  void clear_has_error_code();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::VoteData* data_;
  ::google::protobuf::int32 error_code_;
  friend struct protobuf_system_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncQueueRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SyncQueueRequest) */ {
 public:
  SyncQueueRequest();
  virtual ~SyncQueueRequest();

  SyncQueueRequest(const SyncQueueRequest& from);

  inline SyncQueueRequest& operator=(const SyncQueueRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncQueueRequest(SyncQueueRequest&& from) noexcept
    : SyncQueueRequest() {
    *this = ::std::move(from);
  }

  inline SyncQueueRequest& operator=(SyncQueueRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncQueueRequest& default_instance();

  static inline const SyncQueueRequest* internal_default_instance() {
    return reinterpret_cast<const SyncQueueRequest*>(
               &_SyncQueueRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SyncQueueRequest* other);
  friend void swap(SyncQueueRequest& a, SyncQueueRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncQueueRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncQueueRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncQueueRequest& from);
  void MergeFrom(const SyncQueueRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncQueueRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 last_trans_id = 1;
  bool has_last_trans_id() const;
  void clear_last_trans_id();
  static const int kLastTransIdFieldNumber = 1;
  ::google::protobuf::int64 last_trans_id() const;
  void set_last_trans_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SyncQueueRequest)
 private:
  void set_has_last_trans_id();
  void clear_has_last_trans_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 last_trans_id_;
  friend struct protobuf_system_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncQueueData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SyncQueueData) */ {
 public:
  SyncQueueData();
  virtual ~SyncQueueData();

  SyncQueueData(const SyncQueueData& from);

  inline SyncQueueData& operator=(const SyncQueueData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncQueueData(SyncQueueData&& from) noexcept
    : SyncQueueData() {
    *this = ::std::move(from);
  }

  inline SyncQueueData& operator=(SyncQueueData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncQueueData& default_instance();

  static inline const SyncQueueData* internal_default_instance() {
    return reinterpret_cast<const SyncQueueData*>(
               &_SyncQueueData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SyncQueueData* other);
  friend void swap(SyncQueueData& a, SyncQueueData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncQueueData* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncQueueData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncQueueData& from);
  void MergeFrom(const SyncQueueData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncQueueData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string queue = 2;
  bool has_queue() const;
  void clear_queue();
  static const int kQueueFieldNumber = 2;
  const ::std::string& queue() const;
  void set_queue(const ::std::string& value);
  #if LANG_CXX11
  void set_queue(::std::string&& value);
  #endif
  void set_queue(const char* value);
  void set_queue(const char* value, size_t size);
  ::std::string* mutable_queue();
  ::std::string* release_queue();
  void set_allocated_queue(::std::string* queue);

  // optional bytes data = 9;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 9;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required int64 trans_id = 1;
  bool has_trans_id() const;
  void clear_trans_id();
  static const int kTransIdFieldNumber = 1;
  ::google::protobuf::int64 trans_id() const;
  void set_trans_id(::google::protobuf::int64 value);

  // required int32 op_type = 3;
  bool has_op_type() const;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 3;
  ::google::protobuf::int32 op_type() const;
  void set_op_type(::google::protobuf::int32 value);

  // required int32 message_id = 4;
  bool has_message_id() const;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 4;
  ::google::protobuf::int32 message_id() const;
  void set_message_id(::google::protobuf::int32 value);

  // optional int32 delay = 5 [default = 0];
  bool has_delay() const;
  void clear_delay();
  static const int kDelayFieldNumber = 5;
  ::google::protobuf::int32 delay() const;
  void set_delay(::google::protobuf::int32 value);

  // optional int32 ttl = 6 [default = 0];
  bool has_ttl() const;
  void clear_ttl();
  static const int kTtlFieldNumber = 6;
  ::google::protobuf::int32 ttl() const;
  void set_ttl(::google::protobuf::int32 value);

  // required int64 last_trans_id = 8;
  bool has_last_trans_id() const;
  void clear_last_trans_id();
  static const int kLastTransIdFieldNumber = 8;
  ::google::protobuf::int64 last_trans_id() const;
  void set_last_trans_id(::google::protobuf::int64 value);

  // optional int32 retry = 7 [default = 0];
  bool has_retry() const;
  void clear_retry();
  static const int kRetryFieldNumber = 7;
  ::google::protobuf::int32 retry() const;
  void set_retry(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SyncQueueData)
 private:
  void set_has_last_trans_id();
  void clear_has_last_trans_id();
  void set_has_trans_id();
  void clear_has_trans_id();
  void set_has_queue();
  void clear_has_queue();
  void set_has_op_type();
  void clear_has_op_type();
  void set_has_message_id();
  void clear_has_message_id();
  void set_has_delay();
  void clear_has_delay();
  void set_has_ttl();
  void clear_has_ttl();
  void set_has_retry();
  void clear_has_retry();
  void set_has_data();
  void clear_has_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr queue_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int64 trans_id_;
  ::google::protobuf::int32 op_type_;
  ::google::protobuf::int32 message_id_;
  ::google::protobuf::int32 delay_;
  ::google::protobuf::int32 ttl_;
  ::google::protobuf::int64 last_trans_id_;
  ::google::protobuf::int32 retry_;
  friend struct protobuf_system_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForwardData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ForwardData) */ {
 public:
  ForwardData();
  virtual ~ForwardData();

  ForwardData(const ForwardData& from);

  inline ForwardData& operator=(const ForwardData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForwardData(ForwardData&& from) noexcept
    : ForwardData() {
    *this = ::std::move(from);
  }

  inline ForwardData& operator=(ForwardData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardData& default_instance();

  static inline const ForwardData* internal_default_instance() {
    return reinterpret_cast<const ForwardData*>(
               &_ForwardData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ForwardData* other);
  friend void swap(ForwardData& a, ForwardData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForwardData* New() const PROTOBUF_FINAL { return New(NULL); }

  ForwardData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForwardData& from);
  void MergeFrom(const ForwardData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForwardData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required bytes source = 2;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 2;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const void* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // required int32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::int32 timestamp() const;
  void set_timestamp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ForwardData)
 private:
  void set_has_data();
  void clear_has_data();
  void set_has_source();
  void clear_has_source();
  void set_has_timestamp();
  void clear_has_timestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::int32 timestamp_;
  friend struct protobuf_system_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RegisterRequest

// required int32 node_type = 1 [default = 0];
inline bool RegisterRequest::has_node_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterRequest::set_has_node_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterRequest::clear_has_node_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterRequest::clear_node_type() {
  node_type_ = 0;
  clear_has_node_type();
}
inline ::google::protobuf::int32 RegisterRequest::node_type() const {
  // @@protoc_insertion_point(field_get:RegisterRequest.node_type)
  return node_type_;
}
inline void RegisterRequest::set_node_type(::google::protobuf::int32 value) {
  set_has_node_type();
  node_type_ = value;
  // @@protoc_insertion_point(field_set:RegisterRequest.node_type)
}

// required int32 node_id = 2 [default = 0];
inline bool RegisterRequest::has_node_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegisterRequest::set_has_node_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegisterRequest::clear_has_node_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegisterRequest::clear_node_id() {
  node_id_ = 0;
  clear_has_node_id();
}
inline ::google::protobuf::int32 RegisterRequest::node_id() const {
  // @@protoc_insertion_point(field_get:RegisterRequest.node_id)
  return node_id_;
}
inline void RegisterRequest::set_node_id(::google::protobuf::int32 value) {
  set_has_node_id();
  node_id_ = value;
  // @@protoc_insertion_point(field_set:RegisterRequest.node_id)
}

// -------------------------------------------------------------------

// RegisterResponse

// required int32 error_code = 1 [default = 0];
inline bool RegisterResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 RegisterResponse::error_code() const {
  // @@protoc_insertion_point(field_get:RegisterResponse.error_code)
  return error_code_;
}
inline void RegisterResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:RegisterResponse.error_code)
}

// -------------------------------------------------------------------

// StatusRequest

// -------------------------------------------------------------------

// StatusResponse

// -------------------------------------------------------------------

// VoteData

// optional int32 vote_id = 1 [default = 0];
inline bool VoteData::has_vote_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VoteData::set_has_vote_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VoteData::clear_has_vote_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VoteData::clear_vote_id() {
  vote_id_ = 0;
  clear_has_vote_id();
}
inline ::google::protobuf::int32 VoteData::vote_id() const {
  // @@protoc_insertion_point(field_get:VoteData.vote_id)
  return vote_id_;
}
inline void VoteData::set_vote_id(::google::protobuf::int32 value) {
  set_has_vote_id();
  vote_id_ = value;
  // @@protoc_insertion_point(field_set:VoteData.vote_id)
}

// optional int32 node_id = 2 [default = 0];
inline bool VoteData::has_node_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VoteData::set_has_node_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VoteData::clear_has_node_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VoteData::clear_node_id() {
  node_id_ = 0;
  clear_has_node_id();
}
inline ::google::protobuf::int32 VoteData::node_id() const {
  // @@protoc_insertion_point(field_get:VoteData.node_id)
  return node_id_;
}
inline void VoteData::set_node_id(::google::protobuf::int32 value) {
  set_has_node_id();
  node_id_ = value;
  // @@protoc_insertion_point(field_set:VoteData.node_id)
}

// optional int64 trans_id = 3 [default = 0];
inline bool VoteData::has_trans_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VoteData::set_has_trans_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VoteData::clear_has_trans_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VoteData::clear_trans_id() {
  trans_id_ = GOOGLE_LONGLONG(0);
  clear_has_trans_id();
}
inline ::google::protobuf::int64 VoteData::trans_id() const {
  // @@protoc_insertion_point(field_get:VoteData.trans_id)
  return trans_id_;
}
inline void VoteData::set_trans_id(::google::protobuf::int64 value) {
  set_has_trans_id();
  trans_id_ = value;
  // @@protoc_insertion_point(field_set:VoteData.trans_id)
}

// optional int32 port = 4 [default = 0];
inline bool VoteData::has_port() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VoteData::set_has_port() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VoteData::clear_has_port() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VoteData::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 VoteData::port() const {
  // @@protoc_insertion_point(field_get:VoteData.port)
  return port_;
}
inline void VoteData::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:VoteData.port)
}

// optional string host = 5 [default = ""];
inline bool VoteData::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoteData::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoteData::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoteData::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& VoteData::host() const {
  // @@protoc_insertion_point(field_get:VoteData.host)
  return host_.GetNoArena();
}
inline void VoteData::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VoteData.host)
}
#if LANG_CXX11
inline void VoteData::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VoteData.host)
}
#endif
inline void VoteData::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VoteData.host)
}
inline void VoteData::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VoteData.host)
}
inline ::std::string* VoteData::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:VoteData.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoteData::release_host() {
  // @@protoc_insertion_point(field_release:VoteData.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoteData::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:VoteData.host)
}

// -------------------------------------------------------------------

// VoteResponse

// required int32 error_code = 1 [default = 0];
inline bool VoteResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VoteResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VoteResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VoteResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 VoteResponse::error_code() const {
  // @@protoc_insertion_point(field_get:VoteResponse.error_code)
  return error_code_;
}
inline void VoteResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:VoteResponse.error_code)
}

// optional .VoteData data = 2;
inline bool VoteResponse::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoteResponse::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoteResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoteResponse::clear_data() {
  if (data_ != NULL) data_->::VoteData::Clear();
  clear_has_data();
}
inline const ::VoteData& VoteResponse::data() const {
  const ::VoteData* p = data_;
  // @@protoc_insertion_point(field_get:VoteResponse.data)
  return p != NULL ? *p : *reinterpret_cast<const ::VoteData*>(
      &::_VoteData_default_instance_);
}
inline ::VoteData* VoteResponse::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::VoteData;
  }
  // @@protoc_insertion_point(field_mutable:VoteResponse.data)
  return data_;
}
inline ::VoteData* VoteResponse::release_data() {
  // @@protoc_insertion_point(field_release:VoteResponse.data)
  clear_has_data();
  ::VoteData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void VoteResponse::set_allocated_data(::VoteData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:VoteResponse.data)
}

// -------------------------------------------------------------------

// SyncQueueRequest

// required int64 last_trans_id = 1;
inline bool SyncQueueRequest::has_last_trans_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncQueueRequest::set_has_last_trans_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncQueueRequest::clear_has_last_trans_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncQueueRequest::clear_last_trans_id() {
  last_trans_id_ = GOOGLE_LONGLONG(0);
  clear_has_last_trans_id();
}
inline ::google::protobuf::int64 SyncQueueRequest::last_trans_id() const {
  // @@protoc_insertion_point(field_get:SyncQueueRequest.last_trans_id)
  return last_trans_id_;
}
inline void SyncQueueRequest::set_last_trans_id(::google::protobuf::int64 value) {
  set_has_last_trans_id();
  last_trans_id_ = value;
  // @@protoc_insertion_point(field_set:SyncQueueRequest.last_trans_id)
}

// -------------------------------------------------------------------

// SyncQueueData

// required int64 last_trans_id = 8;
inline bool SyncQueueData::has_last_trans_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SyncQueueData::set_has_last_trans_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SyncQueueData::clear_has_last_trans_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SyncQueueData::clear_last_trans_id() {
  last_trans_id_ = GOOGLE_LONGLONG(0);
  clear_has_last_trans_id();
}
inline ::google::protobuf::int64 SyncQueueData::last_trans_id() const {
  // @@protoc_insertion_point(field_get:SyncQueueData.last_trans_id)
  return last_trans_id_;
}
inline void SyncQueueData::set_last_trans_id(::google::protobuf::int64 value) {
  set_has_last_trans_id();
  last_trans_id_ = value;
  // @@protoc_insertion_point(field_set:SyncQueueData.last_trans_id)
}

// required int64 trans_id = 1;
inline bool SyncQueueData::has_trans_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncQueueData::set_has_trans_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncQueueData::clear_has_trans_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncQueueData::clear_trans_id() {
  trans_id_ = GOOGLE_LONGLONG(0);
  clear_has_trans_id();
}
inline ::google::protobuf::int64 SyncQueueData::trans_id() const {
  // @@protoc_insertion_point(field_get:SyncQueueData.trans_id)
  return trans_id_;
}
inline void SyncQueueData::set_trans_id(::google::protobuf::int64 value) {
  set_has_trans_id();
  trans_id_ = value;
  // @@protoc_insertion_point(field_set:SyncQueueData.trans_id)
}

// required string queue = 2;
inline bool SyncQueueData::has_queue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncQueueData::set_has_queue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncQueueData::clear_has_queue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncQueueData::clear_queue() {
  queue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_queue();
}
inline const ::std::string& SyncQueueData::queue() const {
  // @@protoc_insertion_point(field_get:SyncQueueData.queue)
  return queue_.GetNoArena();
}
inline void SyncQueueData::set_queue(const ::std::string& value) {
  set_has_queue();
  queue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SyncQueueData.queue)
}
#if LANG_CXX11
inline void SyncQueueData::set_queue(::std::string&& value) {
  set_has_queue();
  queue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncQueueData.queue)
}
#endif
inline void SyncQueueData::set_queue(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_queue();
  queue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncQueueData.queue)
}
inline void SyncQueueData::set_queue(const char* value, size_t size) {
  set_has_queue();
  queue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncQueueData.queue)
}
inline ::std::string* SyncQueueData::mutable_queue() {
  set_has_queue();
  // @@protoc_insertion_point(field_mutable:SyncQueueData.queue)
  return queue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncQueueData::release_queue() {
  // @@protoc_insertion_point(field_release:SyncQueueData.queue)
  clear_has_queue();
  return queue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncQueueData::set_allocated_queue(::std::string* queue) {
  if (queue != NULL) {
    set_has_queue();
  } else {
    clear_has_queue();
  }
  queue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), queue);
  // @@protoc_insertion_point(field_set_allocated:SyncQueueData.queue)
}

// required int32 op_type = 3;
inline bool SyncQueueData::has_op_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncQueueData::set_has_op_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncQueueData::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncQueueData::clear_op_type() {
  op_type_ = 0;
  clear_has_op_type();
}
inline ::google::protobuf::int32 SyncQueueData::op_type() const {
  // @@protoc_insertion_point(field_get:SyncQueueData.op_type)
  return op_type_;
}
inline void SyncQueueData::set_op_type(::google::protobuf::int32 value) {
  set_has_op_type();
  op_type_ = value;
  // @@protoc_insertion_point(field_set:SyncQueueData.op_type)
}

// required int32 message_id = 4;
inline bool SyncQueueData::has_message_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SyncQueueData::set_has_message_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SyncQueueData::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SyncQueueData::clear_message_id() {
  message_id_ = 0;
  clear_has_message_id();
}
inline ::google::protobuf::int32 SyncQueueData::message_id() const {
  // @@protoc_insertion_point(field_get:SyncQueueData.message_id)
  return message_id_;
}
inline void SyncQueueData::set_message_id(::google::protobuf::int32 value) {
  set_has_message_id();
  message_id_ = value;
  // @@protoc_insertion_point(field_set:SyncQueueData.message_id)
}

// optional int32 delay = 5 [default = 0];
inline bool SyncQueueData::has_delay() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SyncQueueData::set_has_delay() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SyncQueueData::clear_has_delay() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SyncQueueData::clear_delay() {
  delay_ = 0;
  clear_has_delay();
}
inline ::google::protobuf::int32 SyncQueueData::delay() const {
  // @@protoc_insertion_point(field_get:SyncQueueData.delay)
  return delay_;
}
inline void SyncQueueData::set_delay(::google::protobuf::int32 value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:SyncQueueData.delay)
}

// optional int32 ttl = 6 [default = 0];
inline bool SyncQueueData::has_ttl() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SyncQueueData::set_has_ttl() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SyncQueueData::clear_has_ttl() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SyncQueueData::clear_ttl() {
  ttl_ = 0;
  clear_has_ttl();
}
inline ::google::protobuf::int32 SyncQueueData::ttl() const {
  // @@protoc_insertion_point(field_get:SyncQueueData.ttl)
  return ttl_;
}
inline void SyncQueueData::set_ttl(::google::protobuf::int32 value) {
  set_has_ttl();
  ttl_ = value;
  // @@protoc_insertion_point(field_set:SyncQueueData.ttl)
}

// optional int32 retry = 7 [default = 0];
inline bool SyncQueueData::has_retry() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SyncQueueData::set_has_retry() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SyncQueueData::clear_has_retry() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SyncQueueData::clear_retry() {
  retry_ = 0;
  clear_has_retry();
}
inline ::google::protobuf::int32 SyncQueueData::retry() const {
  // @@protoc_insertion_point(field_get:SyncQueueData.retry)
  return retry_;
}
inline void SyncQueueData::set_retry(::google::protobuf::int32 value) {
  set_has_retry();
  retry_ = value;
  // @@protoc_insertion_point(field_set:SyncQueueData.retry)
}

// optional bytes data = 9;
inline bool SyncQueueData::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncQueueData::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncQueueData::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncQueueData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& SyncQueueData::data() const {
  // @@protoc_insertion_point(field_get:SyncQueueData.data)
  return data_.GetNoArena();
}
inline void SyncQueueData::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SyncQueueData.data)
}
#if LANG_CXX11
inline void SyncQueueData::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncQueueData.data)
}
#endif
inline void SyncQueueData::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncQueueData.data)
}
inline void SyncQueueData::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncQueueData.data)
}
inline ::std::string* SyncQueueData::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:SyncQueueData.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncQueueData::release_data() {
  // @@protoc_insertion_point(field_release:SyncQueueData.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncQueueData::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:SyncQueueData.data)
}

// -------------------------------------------------------------------

// ForwardData

// required bytes data = 1;
inline bool ForwardData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& ForwardData::data() const {
  // @@protoc_insertion_point(field_get:ForwardData.data)
  return data_.GetNoArena();
}
inline void ForwardData::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ForwardData.data)
}
#if LANG_CXX11
inline void ForwardData::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ForwardData.data)
}
#endif
inline void ForwardData::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ForwardData.data)
}
inline void ForwardData::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ForwardData.data)
}
inline ::std::string* ForwardData::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:ForwardData.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForwardData::release_data() {
  // @@protoc_insertion_point(field_release:ForwardData.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardData::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ForwardData.data)
}

// required bytes source = 2;
inline bool ForwardData::has_source() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardData::set_has_source() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardData::clear_has_source() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardData::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& ForwardData::source() const {
  // @@protoc_insertion_point(field_get:ForwardData.source)
  return source_.GetNoArena();
}
inline void ForwardData::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ForwardData.source)
}
#if LANG_CXX11
inline void ForwardData::set_source(::std::string&& value) {
  set_has_source();
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ForwardData.source)
}
#endif
inline void ForwardData::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ForwardData.source)
}
inline void ForwardData::set_source(const void* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ForwardData.source)
}
inline ::std::string* ForwardData::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:ForwardData.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForwardData::release_source() {
  // @@protoc_insertion_point(field_release:ForwardData.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardData::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:ForwardData.source)
}

// required int32 timestamp = 3;
inline bool ForwardData::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardData::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardData::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardData::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 ForwardData::timestamp() const {
  // @@protoc_insertion_point(field_get:ForwardData.timestamp)
  return timestamp_;
}
inline void ForwardData::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ForwardData.timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SystemMessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SystemMessageType>() {
  return ::SystemMessageType_descriptor();
}
template <> struct is_proto_enum< ::SystemErrorType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SystemErrorType>() {
  return ::SystemErrorType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_system_2eproto__INCLUDED
